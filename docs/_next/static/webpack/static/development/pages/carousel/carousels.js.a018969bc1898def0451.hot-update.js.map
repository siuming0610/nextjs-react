{"version":3,"file":"static/webpack/static/development/pages/carousel/carousels.js.a018969bc1898def0451.hot-update.js","sources":["webpack:///./components/container/carousel/CarouselsContainer.jsx","webpack:///./components/container/carousel/CarouselsPage.jsx"],"sourcesContent":["/** npm packages */\nimport React, { useState } from \"react\";\n// import propTypes from 'prop-types';\n\n/** components */\nimport CarouselsPage from \"./CarouselsPage\";\n\n/* slides */\nimport { SLIDES } from \"../../../constants/slides\";\n\nfunction CarouselsContainer({ dispatch, storeLayout }) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === SLIDES.carousels.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex =\n      activeIndex === 0 ? SLIDES.carousels.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  const props = {\n    dispatch,\n    storeLayout,\n    /* slides */\n    SLIDES,\n    activeIndex,\n    // animating,\n    setAnimating,\n    next,\n    previous,\n    goToIndex\n  };\n\n  return <CarouselsPage {...props} />;\n}\n\n// CarouselsContainer.propTypes = {\n//   isMobile: propTypes.bool.isRequired,\n// };\n\nexport default CarouselsContainer;\n","import React, { memo } from \"react\";\nimport {\n  Row,\n  Col,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from \"reactstrap\";\n\nconst CarouselsPage = memo(props => {\n  const {\n    dispatch,\n    storeLayout,\n    /* slides */\n    SLIDES,\n    activeIndex,\n    // animating,\n    setAnimating,\n    next,\n    previous,\n    goToIndex\n  } = props;\n\n  const slides = SLIDES.carousels.map(item => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} className=\"img-fluid\" />\n        <CarouselCaption\n          captionText={item.caption}\n          captionHeader={item.caption}\n        />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <>\n      <h1>Carousel</h1>\n      <Row lg=\"12\">\n        <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n          <CarouselIndicators\n            items={SLIDES.carousels}\n            activeIndex={activeIndex}\n            onClickHandler={goToIndex}\n          />\n          {slides}\n          <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={previous}\n          />\n          <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={next}\n          />\n        </Carousel>\n      </Row>\n    </>\n  );\n});\n\nexport default CarouselsPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;;;;A","sourceRoot":""}